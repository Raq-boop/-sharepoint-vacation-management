name: Release & Deploy

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

env:
  NODE_VERSION: '22.x'

jobs:
  build:
    name: Build & Package
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.version.outputs.version }}
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Extract version
      id: version
      run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
      
    - name: Run tests
      run: npm run test:ci
      
    - name: Build solution
      run: npm run build
      
    - name: Package solution
      run: npm run package
      
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: spfx-solution-${{ steps.version.outputs.version }}
        path: |
          sharepoint/solution/*.sppkg
          temp/deploy/*
          
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: build
    if: github.event.inputs.environment == 'staging' || github.event_name == 'workflow_dispatch'
    environment: staging
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: spfx-solution-${{ needs.build.outputs.version }}
        
    - name: Deploy to SharePoint App Catalog (Staging)
      run: |
        echo "Deploying to staging environment..."
        echo "Solution version: ${{ needs.build.outputs.version }}"
        # Add deployment script here
        
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' || github.event.inputs.environment == 'production'
    environment: production
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: spfx-solution-${{ needs.build.outputs.version }}
        
    - name: Deploy to SharePoint App Catalog (Production)
      run: |
        echo "Deploying to production environment..."
        echo "Solution version: ${{ needs.build.outputs.version }}"
        # Add production deployment script here
        
    - name: Create deployment notification
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.sha,
            environment: 'production',
            description: 'SPFx solution deployed to production',
            auto_merge: false
          });
          
  notify:
    name: Notify Teams
    runs-on: ubuntu-latest
    needs: [deploy-staging, deploy-production]
    if: always()
    
    steps:
    - name: Notify deployment status
      uses: actions/github-script@v6
      with:
        script: |
          const status = '${{ needs.deploy-production.result }}' === 'success' ? '✅ Success' : '❌ Failed';
          console.log(`Deployment status: ${status}`);
          // Add Teams webhook notification here